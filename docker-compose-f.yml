---
version: "2"
x-redash-service: &redash-service
  image: redash_server
  restart: always
services:
  server:
    <<: *redash-service
    command: server
    container_name: redash
    ports:
      - "5000:5000"
      - "5678:5678"
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_WEB_WORKERS: 5
    mem_limit: 7516192768
  scheduler:
    <<: *redash-service
    command: scheduler
    environment:
      PYTHONUNBUFFERED: 0
    mem_limit: 7516192768
  scheduled_worker:
    <<: *redash-service
    command: worker
    depends_on:
      - server
    environment:
      PYTHONUNBUFFERED: 0
    mem_limit: 7516192768
  adhoc_worker:
    <<: *redash-service
    command: worker
    depends_on:
      - server
    mem_limit: 7516192768
  adhoc_worker2:
    <<: *redash-service
    command: worker
    depends_on:
      - server
    mem_limit: 7516192768
  adhoc_worker3:
    <<: *redash-service
    command: worker
    depends_on:
      - server
    mem_limit: 7516192768
  adhoc_worker4:
    <<: *redash-service
    command: worker
    depends_on:
      - server
    mem_limit: 7516192768
  redis:
    image: redis:3-alpine
    restart: unless-stopped
  postgres:
    image: postgres:9.5-alpine
    # The following turns the DB into less durable, but gains significant performance improvements for the tests run (x3
    # improvement on my personal machine). We should consider moving this into a dedicated Docker Compose configuration for
    # tests.
    ports:
      - "15432:5432"
    command: "postgres -c fsync=off -c full_page_writes=off -c synchronous_commit=OFF"
    restart: unless-stopped
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
  email:
    image: djfarrelly/maildev
    ports:
      - "1080:80"
    restart: unless-stopped
