name: Build and Deploy to Staging

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version to build for'
        required: true
        type: string

env:
  ECR_REPOSITORY: ${{ secrets.A9E_REDASH_DOCKER_REPO }}
  IMAGE_TAG: ${{ inputs.version || github.ref_name }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.A9E_REDASH_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.A9E_REDASH_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          # Build a docker container and push it to ECR so that it can be deployed to ECS.
          img="${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          echo $img
          docker build --platform=linux/amd64 --build-arg skip_dev_deps=true -t $img .
          docker push $img
          echo "IMAGE=$img" >> $GITHUB_ENV

      - name: Login to remote server, pull new version and restart docker
        run: |
          img=${IMAGE}
          echo $img
          echo "${{ secrets.A9E_REDASH_STAGING_PEM }}" > key.pem && chmod 600 key.pem
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@ec2-50-16-85-10.compute-1.amazonaws.com <<EOL
            cd /opt/redash
            sudo docker image pull $img
            sudo docker-compose down
            sed -i '' "1,/\(image:\).*/s/\(image:\).*/\1 $img/" docker-compose.yml
            cat docker-compose.yml
            sudo docker-compose up -d
          EOL%
